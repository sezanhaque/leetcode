class Solution:
    def checkPerfectNumber(self, num: int) -> bool:
        """
        The first five perfect numbers are generated by the formula
            2^(p − 1) x (2^p − 1)
        with p a prime number, as follows:
        6, 28, 496, 8128, 33550336
        """
        return num in (6, 28, 496, 8128, 33550336)

    def checkPerfectNumber(self, num: int) -> bool:
        # we need to evaluate perfect numbers for some primes (2,3,5,7,13,17,19,31) only
        # as for bigger prime its perfect number will not fit in 64 bits.
        primes = [2, 3, 5, 7, 13, 17, 19, 31]

        for i in primes:
            if self.isPrime(i) == num:
                return True

        return False

    def isPrime(self, num: int):
        # 2^(p − 1) x (2^p − 1)
        return (1 << (num - 1)) * ((1 << num) - 1)


obj = Solution()
print(obj.checkPerfectNumber(28))
